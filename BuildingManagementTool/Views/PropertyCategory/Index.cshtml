@model CategoryViewModel

<style>
    .categoryBox{
        max-width: 24%;
        height: auto;
    }

    .categoryBox, .sideBox {
        height: 15rem;
        border-radius: 10px;
        border: 1px solid #ddd;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        background-color: skyblue;
        cursor: pointer;
        position: relative;
        overflow: hidden;
        flex: 1 1 23%;
    }

    .sideBoxContainer{
        max-width: 24%;
    }

    .propertyBox {
        height: 15rem;
        border-radius: 10px;
        border: 1px solid #ddd
    }

    .categoryBox:hover, .sideBox:hover {
        background-color: #f0f0f0;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
    }

    h4 {
        margin-top: 1rem;
    }

    .categoryBox.expanded, .sideBox.expanded {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%; /* Full width of the container */
        height: 100%; /* Full height of the container */
        z-index: 10; /* Ensure it appears above other content */
        overflow: auto; /* Enable scrolling if content overflows */
        padding: 20px;
        box-sizing: border-box;
        background-color: white; /* Optional: ensure background color */
        max-width: none;
    }

</style>

@if (User.IsInRole("Manager"))
{
    <h2 class="mt-5 mb-5">You're in Manage Mode!</h2>
    <a class="btn btn-primary">Add Category</a>
}
else
{
    <h2 class="mt-5 mb-5">You're in View Mode!</h2>
}

<div class="container position-relative p-0">
    <div class="row w-100 mx-0 my-3 d-flex justify-content-around">
        @for (int i = 0; i < 4 && i < Model.PropertyCategories.Count(); i++)
        {
            <div class="col-lg-3 categoryBox" data-id="@Model.PropertyCategories.ElementAt(i).PropertyCategoryId">
                <h4>@Model.PropertyCategories.ElementAt(i).Category.CategoryName</h4>
                <div class="documentContent container"></div>
            </div>
        }
    </div>
    
    <div class="row w-100 mx-0 my-3 d-flex justify-content-around">
        <div class="col-lg-3 p-0 sideBoxContainer">
            
            @if (Model.PropertyCategories.Count() > 4)
            {
                <div class="sideBox px-2 mb-2" data-id=" @Model.PropertyCategories.ElementAt(4).PropertyCategoryId">
                    <h4>@Model.PropertyCategories.ElementAt(4).Category.CategoryName</h4>
                </div>
            }
            
            @if (Model.PropertyCategories.Count() > 5)
            {
                <div class="sideBox px-2" data-id="@Model.PropertyCategories.ElementAt(5).PropertyCategoryId">
                    <h4>@Model.PropertyCategories.ElementAt(5).Category.CategoryName</h4>
                </div>
            }
        </div>
        <div class="col-lg-6 d-flex justify-content-between align-items-center">
            <div class="w-100 h-auto propertyBox">
                <img src="@Model.PropertyImageUrl" class="img-fluid" alt="Property Image" />
            </div>
        </div>
        <div class="col-lg-3 p-0 sideBoxContainer">
            
            @if (Model.PropertyCategories.Count() > 6)
            {
                <div class="sideBox px-2 mb-2" data-id="@Model.PropertyCategories.ElementAt(6).PropertyCategoryId">
                    <h4>@Model.PropertyCategories.ElementAt(6).Category.CategoryName</h4>
                </div>
            }
            
            
            @if (Model.PropertyCategories.Count() > 7)
            {
                <div class="sideBox px-2" data-id="@Model.PropertyCategories.ElementAt(7).PropertyCategoryId">
                    <h4>@Model.PropertyCategories.ElementAt(7).Category.CategoryName</h4>
                </div>
            }
        </div>
    </div>
    <div class="row w-100 mx-0 my-3 d-flex justify-content-around">
        @for (int i = 8; i < Model.PropertyCategories.Count(); i++)
        {
            <div class="col-lg-3 categoryBox" data-id="@Model.PropertyCategories.ElementAt(i).PropertyCategoryId">
                <h4>@Model.PropertyCategories.ElementAt(i).Category.CategoryName</h4>
            </div>
        }
    </div>
</div>

<script>
    /*
    document.addEventListener("DOMContentLoaded", function () {   
        // Select all elements with class .categoryBox or .sidebox
        document.querySelectorAll(".categoryBox, .sideBox").forEach(function (div) {
            div.addEventListener("click", function () {
                var pcId = this.getAttribute("data-id");
                var url = '/Document/Index?id=' + pcId;
                window.location.href = url;
            });
        });
    });
    */

    $(document).on('click', '.categoryBox, .sideBox', function () {
        var catDiv = $(this)
        var categoryId = catDiv.data('id');

        $(document).on('click', '.collapseBtn', function (event) {
            if (catDiv.hasClass('expanded')) {
                catDiv.removeClass('expanded').find('.documentContent').slideUp(function () {
                    $(this).remove(); // Remove the content after sliding up
                    console.log('shrink')
                });
                catDiv.children('h4').first().show();
            }
        });

        //Collapse box if already opened
        if (catDiv.hasClass('expanded')) {
            catDiv.removeClass('expanded').find('.documentContent').slideUp(function () {
                $(this).remove(); // Remove the content after sliding up
                console.log('shrink')
            });
            catDiv.children('h4').first().show();
        } else {
            // Collapse any other expanded boxes
            $('.categoryBox, .sideBox').removeClass('expanded').find('.documentContent').slideUp(function () {
                $(this).remove(); // Remove the content after sliding up
                console.log('shrink')
            });
            catDiv.children('h4').first().hide();
            // Expand the clicked box
            catDiv.addClass('expanded');
            console.log('expand')
            $.ajax({
                url: '/Document/Index',
                type: 'GET',
                data: { id: categoryId },
                success: function (result) {
                    var $documentContent = $('<div class="documentContent container"></div>').html(result).hide();
                    catDiv.append($documentContent); // Append the new content
                    $documentContent.css('position', 'absolute');
                    $documentContent.css('cursor', 'default');
                    $documentContent.slideDown();
                },
                error: function (xhr, status, error) {
                    console.error("Error loading documents: " + error);
                }
            });
        }
    });

    $(document).on('click', '.documentContent', function (event) {
        event.stopPropagation(); // Prevents the click from bubbling up to parent elements
    });
    
</script>