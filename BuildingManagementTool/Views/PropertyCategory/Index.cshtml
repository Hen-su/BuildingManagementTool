@model CategoryViewModel

<style>
    .error{
        color: red;
    }

    .categoryBox{
        height: auto;
    }

    .categoryBox, .sideBox {
        height: 15rem;
        border-left: 5px solid skyblue;
        background-color: white;
        cursor: pointer;
        position: relative;
        overflow: visible;
        flex: 1 1 23%;
    }

    .sideBoxContainer:last-of-type {
        border-right: 5px solid skyblue;
    }

    .propertyBox {
        height: 15rem;
        border: 1px solid #ddd;
    }

    .propertyBoxContainer {
        border-left: 5px solid skyblue;
    }

    .canvasRow .categoryBox:last-of-type {
        border-left: 5px solid skyblue;
        border-right: 5px solid skyblue;
    }
      
    .sideBox:first-child{
    border-bottom: 5px solid skyblue;
    }

    .categoryBox:hover, .sideBox:hover {
        background-color: #f0f0f0;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
    }

    .boxHeader {
        padding-top: 1rem;
    }

    .categoryBox.expanded, .sideBox.expanded {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 10;
        overflow: auto;
        padding: 20px;
        box-sizing: border-box;
        background-color: white;
        max-width: none;
        border: none;
    }

    .canvasRow {
        border-top: 5px solid skyblue;
    }

    .canvasRow:last-of-type {
        border-bottom: 5px solid skyblue;
    }

    @@media print {
        body * {
            visibility: hidden; 
        }

        #categoryContainer, #categoryContainer * {
            visibility: visible; 
            page-break-inside: avoid; 
        }

        #categoryContainer {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            transform: scale(0.8); 
            transform-origin: top left; 
            padding: 0;
        }
        @@page {
            margin: 0;
        }

        html, body {
            margin: 0;
            padding: 0;
            height: auto;
        }
    }

    #addCategoryModalBtn {
        position: fixed;
        bottom: 10rem;
        right: 15rem;
        width: 60px;
        height: 60px;
        background-color: #007bff;
        color: white;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        font-size: 24px;
        text-decoration: none;
    }

    #addCategoryModalBtn:hover {
        background-color: #0056b3;
    }

</style>


@if (Model.Role == "Manager")
{
    <h2 class="mt-5 mb-5">You're in Manage Mode!</h2>
    <a id="addCategoryModalBtn">
        <i class="fas fa-plus"></i>
    </a>
}
else
{
    <h2 class="mt-5 mb-5">You're in View Mode!</h2>
}
<a id="btnPrintCanvas" class="btn btn-info mb-3">Print Canvas</a>
<h2 class="text-center mb-4">@Model.Property.PropertyName</h2>

<div id="categoryContainer">
    <partial name="_CategoryCanvas" model="Model" />
</div>
<div class="errorContainer alert alert-danger mt-2" style="display:none;"></div>
<div id="categoryModalContainer" class="modal shadow" role="dialog"></div>


<script>
        const printBtn = document.getElementById("btnPrintCanvas");
        printBtn.addEventListener('click', function () {
            print();
        });

    $(document).ready(function () {
        $('#categoryModalContainer').on('hidden.bs.modal', function () {
            console.log("emptied");
            $(this).empty();
        });

        $(document).on('click', '#addCategoryModalBtn', function (event) {
            console.log("add category clicked")
            var currentProperty = @Model.Property.PropertyId;
            var url = "/PropertyCategory/CategoryFormPartial/" + encodeURIComponent(currentProperty);
            $("#categoryModalContainer").load(url, function () {
                $("#categoryModalContainer").modal("show");
            });
        });

        $(document).off('click', '.editCategoryModalBtn').on('click', '.editCategoryModalBtn', function (event) {
            console.log("manage category clicked", )
            var currentProperty = @Model.Property.PropertyId;
            var currentCategory = $(this).data('id');
            console.log(currentCategory)
            var url = "/PropertyCategory/EditCategoryFormPartial/" + encodeURIComponent(currentProperty) + "?currentCategoryId=" + encodeURIComponent(currentCategory);
            $("#categoryModalContainer").load(url, function () {
                $("#categoryModalContainer").modal("show");
            });
        });

        $(document).on('click', '#addBtn', function (event) {
            console.log("Add clicked")
            var categoryName = $(".categoryName").val();
            console.log($(".categoryName").val());
            console.log($(".categoryName").length);
            var categoryForm = $("#categoryForm");
            if (categoryForm.valid()) {
                $.ajax({
                    url: '/PropertyCategory/AddCategory',
                    type: 'POST',
                    data: { id: '@Model.Property.PropertyId', name: categoryName },
                    success: function (response) {
                        if (response.success) {
                            $.ajax({
                                url: '/PropertyCategory/UpdateCategoryCanvas',
                                type: 'GET',
                                data: { id: '@Model.Property.PropertyId' },
                                success: function (result) {
                                    $('#categoryModalContainer').modal('hide');
                                    $('#categoryContainer').html(result);
                                },
                                error: function () {
                                    alert('An error occurred while adding the category');
                                }
                            });
                        } else {
                            displayErrorMessage(response);
                        }
                    },
                    error: function (xhr) {
                        displayErrorMessage(xhr);
                    }
                });
            }
            return
        })

        $(document).off('click', '#renameBtn').on('click', '#renameBtn', function (event) {
            console.log("Rename clicked")
            var categoryName = $(".categoryName").val();
            console.log($(".categoryName").val());
            console.log($(".categoryName").length);
            var categoryForm = $("#categoryForm");
            if (categoryForm.valid()) { 
                $.ajax({
                    url: '/Blob/RenamePropertyCategory',
                    type: 'POST',
                    data: { id: $(this).data('id'), newName: categoryName },
                    success: function (response) {
                        if (response.success) {
                            $.ajax({
                                url: '/PropertyCategory/UpdateCategoryCanvas',
                                type: 'GET',
                                data: { id: '@Model.Property.PropertyId' },
                                success: function (result) {
                                    $('#categoryModalContainer').modal('hide');
                                    $('#categoryContainer').html(result);
                                },
                                error: function () {
                                    alert('An error occurred while adding the category');
                                }
                            });
                        } else {
                            displayErrorMessage(response);
                        }
                    },
                    error: function (xhr) {
                        displayErrorMessage(xhr);
                    }
                });
            }
            return
        })

        $(document).off("click", ".deleteCategoryModalBtn").on('click', '.deleteCategoryModalBtn', function (event) {
            event.stopPropagation();
            console.log("deleteConf clicked")
            var categoryId = $(this).data("id");
            $("#categoryModalContainer").load("/PropertyCategory/DeleteConfirmationPartial?id=" + categoryId, function () {
                $("#categoryModalContainer").modal("show");
            });
        })

        $(document).on("click", ".deleteCategoryConfirmBtn", function (event) {
            console.log("Delete clicked")
            var categoryId = $(this).data('id');
            $.ajax({
                url: '/Blob/DeletePropertyCategory',
                type: 'POST',
                data: { id: categoryId },
                success: function (response) {
                    if (response.success) {
                        $.ajax({
                            url: '/PropertyCategory/UpdateCategoryCanvas',
                            type: 'GET',
                            data: { id: '@Model.Property.PropertyId' },
                            success: function (result) {
                                // Replace the document list with the updated content
                                $('#categoryModalContainer').modal('hide');
                                $('#categoryContainer').html(result);
                                
                            },
                            error: function () {
                                alert('An error occurred while deleting the category');
                            }
                        });
                    } else {
                        displayErrorMessage(response);
                    }
                },
                error: function (xhr) {
                    displayErrorMessage(xhr);
                }
            });
        })

        function displayErrorMessage(response) {
            let message = 'An unexpected error occurred.';

            if (response.responseJSON && response.responseJSON.message) {
                message = response.responseJSON.message;
            } else if (response.message) {
                message = response.message;
            } else if (response.statusText) {
                message = response.statusText;
            }

            $('.errorContainer').text(message).show();
        }

        $(document).on('input', '.colorPicker', function (event) {
        var color = $(this).val();
        $(this).closest('.categoryBox, .sideBox').css('background-color', color);

        // Send the color change to the server
        var categoryId = $(this).closest('.categoryBox, .sideBox').data('id');
        $.ajax({
            url: '/PropertyCategory/UpdateColor',
            type: 'POST',
            data: { id: categoryId, color: color },
            success: function () {
                console.log('Color updated successfully');
            },
            error: function (xhr, status, error) {
                console.error("Error updating color: " + error);
            }
        });
    });
    })

</script>