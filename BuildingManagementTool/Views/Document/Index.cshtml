<!--Old View-->
@model DocumentViewModel

<h1>@Model.CurrentCategory.Category.CategoryName</h1>

@if (User.IsInRole("Manager"))
{
    <button id="uploadModalBtn" class="btn-success btn-md">Upload</button>

}

<div class="container-fluid p-0 row justify-content-between" id="documentContainer">
    <partial name="_DocumentList" model="@Model.Documents"></partial>
</div>
<div class="col-auto mt-3 float-right" style="position: fixed; right:5rem; top: 11rem">
    <div id="documentOptionsContainer">
    </div>
</div>

<div id="modalContainer" class="modal shadow" role="dialog"></div>


<script>
    $(document).ready(function () {
        $("#uploadModalBtn").click(function () {
            var propertyCategoryId = @Model.CurrentCategory.PropertyCategoryId;
            var url = "/Document/UploadFormPartial/" + encodeURIComponent(propertyCategoryId);
            $("#modalContainer").load(url, function () {
                $("#modalContainer").modal("show");
            });
        });

        $(document).on("click", "#confirmDeleteBtn", function () {
            console.log("confirm clicked")
            var documentId = $(this).data("id")
            $.ajax({
                url: '/Blob/DeleteBlob',
                type: 'POST',
                data: { id: documentId },
                success: function (response) {
                    if (response.success) {
                        $.ajax({
                            url: '/Document/UpdateList',
                            type: 'GET',
                            data: { id: @Model.CurrentCategory.PropertyCategoryId },
                            success: function (result) {
                                // Replace the document list with the updated content
                                $('#documentContainer').html(result);
                                $('#modalContainer').modal('hide');
                            },
                            error: function () {
                                alert('An error occurred while updating the document list.');
                            }
                        });
                    } else {
                        alert(response.message || 'An error occurred while deleting the document.');
                    }
                },
                error: function () {
                    alert('An error occurred while deleting the document.');
                }
            });
        })

        $(document).on("click", "#submitBtn", function (ev) {
            ev.preventDefault();
            //disable upload button after first click
            var $button = $(this); // Reference to the button

            // Check if the button is already disabled to prevent further actions
            if ($button.prop('disabled')) {
                return;
            }

            console.log("submit clicked")

            var form = $('#uploadForm')[0];
            var formData = new FormData(form)
            formData.append('id', @Model.CurrentCategory.PropertyCategoryId);
            console.log("submit")

            $.ajax({
                url: '/Blob/UploadBlob',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        $.ajax({
                            url: '/Document/UpdateList',
                            type: 'GET',
                            data: { id: @Model.CurrentCategory.PropertyCategoryId },
                            success: function (result) {
                                // Replace the document list with the updated content
                                $('#documentContainer').html(result);
                                $('#modalContainer').modal('hide');
                                // re-enable upload button after success
                                $('#submitBtn').prop('disabled', false).text('Upload');
                            },
                            error: function () {
                                alert('An error occurred while updating the document list.');
                            }
                        });
                    } else {
                        alert(response.message || 'An error occurred while uploading the document.');
                        // re-enable upload button after success
                        $('#submitBtn').prop('disabled', false).text('Upload');
                    }
                },
                error: function () {
                    alert('An error occurred while uploading the document.');
                }
            });
        })
    });

    function selectUnselect(documentId) {
        // finding clicked card
        var clickedCard = document.querySelector('.doc-card[onclick="selectUnselect(' + documentId + ')"]');

        // if clicked card is already selected
        if (clickedCard.classList.contains('selected')) {
            // If yes remove the selected class
            clickedCard.classList.remove('selected');
            document.getElementById('documentOptionsContainer').innerHTML = '';
        } else {
            // if not, deselect any other selected card
            document.querySelectorAll('.doc-card').forEach(function (card) {
                card.classList.remove('selected');
            });

            // Adding 'selected' class to the clicked card
            clickedCard.classList.add('selected');

            // Loading the DocumentPreview partial view for the selected document using AJAX
            $.get('/Document/GetDocumentOptions', { documentId: documentId }, function (response) {
                $('#documentOptionsContainer').html(response);
            });
        }
    }
</script>