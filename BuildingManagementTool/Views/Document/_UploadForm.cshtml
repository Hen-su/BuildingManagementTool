<div class="modal-dialog modal-lg modal-dialog-centered" role="document">
    <div class="modal-content px-4">
        <div class="modal-header">
            <h2>Upload Files</h2>
        </div>

        <div class="modal-body">
                <form asp-controller="Blob" asp-action="UploadBlob" id="uploadForm" method="post" enctype="multipart/form-data">
                    <div class="row justify-content-between">
                        <div class="col-4">
                            <input type="file" name="files" id="fileInput" multiple>
                        </div>
                    <div class="col-7" style="border: 2px dashed #ccc;">
                            <div class="d-flex justify-content-center align-items-center" id="dropArea" style="height:150px;">
                                <h5>Drag and Drop Files here</h5>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <button class="btn-primary" type="submit">Upload Now</button>
                    </div>
                </form>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
    </div>
</div>

<script>
    const dropBox = () => {
        const dropArea = document.querySelector('#dropArea')

        if (!dropArea) {
            console.error('Element with id #dropArea not found');
            return;
        }

        const active = () => {
            dropArea.style.backgroundColor = "#bbb";
        };

        const inactive = () => {
            dropArea.style.backgroundColor = "";
        };

        const prevents = (e) => {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(evtName => {
            dropArea.addEventListener(evtName, prevents);
        });
        ['dragenter', 'dragover'].forEach(evtName => {
            dropArea.addEventListener(evtName, active);
        });
        ['dragleave', 'drop'].forEach(evtName => {
            dropArea.addEventListener(evtName, inactive)
        });

        dropArea.addEventListener('drop', handleDrop);
    };

    const handleDrop = (e) => {
        const fileInput = document.querySelector('#fileInput')
        const dt = e.dataTransfer;
        if (dt && dt.files) {
            const files = Array.from(dt.files);
            const dataTransfer = new DataTransfer();
            for (const file of fileInput.files) {
                dataTransfer.items.add(file);
            }
            for (const file of dt.files) {
                dataTransfer.items.add(file);
            }
            fileInput.files = dataTransfer.files;
        }
    }

    dropBox();
</script>
